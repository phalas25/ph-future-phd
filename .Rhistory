#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
qPCR_f = qPCR_raw [7: ncol(qPCR_raw,]
#colnames(qPCR_raw) <- c(qPCR_raw[7,:]))
#qPCR_trim1 = qPCR_trim[6:(nrow(qPCR_trim),]
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
qPCR_t = qPCR_raw [7: ncol(qPCR_raw,]
#colnames(qPCR_raw) <- c(qPCR_raw[7,:]))
#qPCR_trim1 = qPCR_trim[6:(nrow(qPCR_trim),]
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
qPCR_trim = qPCR_raw [7: ncol(qPCR_raw),]
View(qPCR_trim)
#import and rename data set. Remember it needs to be in Git working directory!
qPCR_raw <- read.csv ("11_5_19_qPCR_raw_1.csv", header = TRUE)
class(qPCR_raw)
colnames(qPCR_raw)
names(qPCR_raw) <- c("Well", "Sample.Name", "Target.Name", "Task", "Reporter", "Quencher", "RQ", "RQ Min", "RQ Max", "Cт")
colnames(qPCR_raw)
#colnames(qPCR_raw) <- c(qPCR_raw[7,:]))
#qPCR_trim1 = qPCR_trim[6:(nrow(qPCR_trim),]
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
qPCR_trim = qPCR_raw [7: ncol(qPCR_raw),]
View(qPCR_trim)
View(qPCR_f)
#import and rename data set. Remember it needs to be in Git working directory!
qPCR_raw <- read.csv ("11_5_19_qPCR_raw_1.csv", header = TRUE)
class(qPCR_raw)
colnames(qPCR_raw)
names(qPCR_raw) <- c("Well", "Sample.Name", "Target.Name", "Task", "Reporter", "Quencher", "RQ", "RQ Min", "RQ Max", "Cт")
colnames(qPCR_raw)
#colnames(qPCR_raw) <- c(qPCR_raw[7,:]))
#qPCR_trim1 = qPCR_trim[6:(nrow(qPCR_trim),]
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
qPCR_cut = qPCR_raw [7: ncol(qPCR_raw),]
View(qPCR_cut)
View(qPCR_raw)
#colnames(qPCR_raw) <- c(qPCR_raw[7,:]))
#qPCR_trim1 = qPCR_trim[6:(nrow(qPCR_trim),]
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
qPCR_cut = qPCR_raw [7: ,]
#colnames(qPCR_raw) <- c(qPCR_raw[7,:]))
#qPCR_trim1 = qPCR_trim[6:(nrow(qPCR_trim),]
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
qPCR_cut = qPCR_raw [7: ]
#colnames(qPCR_raw) <- c(qPCR_raw[7,:]))
#qPCR_trim1 = qPCR_trim[6:(nrow(qPCR_trim),]
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
qPCR_cut = qPCR_raw [7: ]
#colnames(qPCR_raw) <- c(qPCR_raw[7,:]))
#qPCR_trim1 = qPCR_trim[6:(nrow(qPCR_trim),]
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
qPCR_cut = qPCR_raw [7: nrow(qPCR_raw)]
#colnames(qPCR_raw) <- c(qPCR_raw[7,:]))
#qPCR_trim1 = qPCR_trim[6:(nrow(qPCR_trim),]
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
qPCR_cut = qPCR_raw [7: nrow(qPCR_raw),]
View(qPCR_cut)
#import and rename data set. Remember it needs to be in Git working directory!
qPCR_raw <- read.csv ("11_5_19_qPCR_raw_1.csv", header = TRUE)
class(qPCR_raw)
colnames(qPCR_raw)
names(qPCR_raw) <- c("Well", "Sample.Name", "Target.Name", "Task", "Reporter", "Quencher", "RQ", "RQ Min", "RQ Max", "Cт")
colnames(qPCR_raw)
#colnames(qPCR_raw) <- c(qPCR_raw[7,:]))
#qPCR_trim1 = qPCR_trim[6:(nrow(qPCR_trim),]
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
qPCR_cut = qPCR_raw [7: nrow(qPCR_raw),]
View(qPCR_cut)
#import and rename data set. Remember it needs to be in Git working directory!
qPCR_raw <- read.csv ("11_5_19_qPCR_raw_1.csv", header = TRUE)
class(qPCR_raw)
colnames(qPCR_raw)
names(qPCR_raw) <- c("Well", "Sample.Name", "Target.Name", "Task", "Reporter", "Quencher", "RQ", "RQ Min", "RQ Max", "Cт")
colnames(qPCR_raw)
#colnames(qPCR_raw) <- c(qPCR_raw[7,:]))
#qPCR_trim1 = qPCR_trim[6:(nrow(qPCR_trim),]
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
qPCR_c = qPCR_raw [7: nrow(qPCR_raw),]
View(qPCR_c)
qPCR_c2 = qPCR_c [1:(nrow(qPCR_c)-5,]
#colnames(qPCR_raw) <- c(qPCR_raw[7,:]))
#qPCR_trim1 = qPCR_trim[6:(nrow(qPCR_trim),]
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
qPCR_c = qPCR_raw [7: nrow(qPCR_raw),]
qPCR_c2 = qPCR_c [1:(nrow(qPCR_c)-5,]
View(qPCR_raw)
View(qPCR_trim)
View(qPCR_trim_1)
View(qPCR_trims)
#colnames(qPCR_raw) <- c(qPCR_raw[7,:]))
#qPCR_trim1 = qPCR_trim[6:(nrow(qPCR_trim),]
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
qPCR_c = qPCR_raw [7: nrow(qPCR_raw),]
qPCR_c2 = qPCR_c [1:(nrow(qPCR_c)-5,]
qPCR_c2 = qPCR_c [1:(nrow(qPCR_raw)-5,]
View(qPCR_c)
qPCR_c2 = qPCR_c [1:(nrow(qPCR_c) - 5,]
qPCR_c2 = qPCR_c [1:(nrow(qPCR_c)-5 ,]
qPCR_c2 = qPCR_c [1:(nrow(qPCR_c)-5 ]
#import and rename data set. Remember it needs to be in Git working directory!
qPCR_raw <- read.csv ("11_5_19_qPCR_raw_1.csv", header = TRUE)
class(qPCR_raw)
colnames(qPCR_raw)
names(qPCR_raw) <- c("Well", "Sample.Name", "Target.Name", "Task", "Reporter", "Quencher", "RQ", "RQ Min", "RQ Max", "Cт")
colnames(qPCR_raw)
#colnames(qPCR_raw) <- c(qPCR_raw[7,:]))
#qPCR_trim1 = qPCR_trim[6:(nrow(qPCR_trim),]
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
qPCR_c = qPCR_raw [7: nrow(qPCR_raw),]
qPCR_c2 = qPCR_c [1:(nrow(qPCR_c)-5 ,]
qPCR_c2 = qPCR_c [1:((nrow(qPCR_c)-5) ,]
qPCR_c2 = qPCR_c [1:((nrow(qPCR_c)-5),]
#colnames(qPCR_raw) <- c(qPCR_raw[7,:]))
#qPCR_trim1 = qPCR_trim[6:(nrow(qPCR_trim),]
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
qPCR_c = qPCR_raw [7: nrow(qPCR_raw),]
qPCR_c2 = qPCR_c [1:((nrow(qPCR_c)-5),]
qPCR_c2 = qPCR_raw [1:((nrow(qPCR_c)-5),]
qPCR_c2 = qPCR_c [1:((nrow(qPCR_c)-5),]
qPCR_c2 = qPCR_c [1: nrow(qPCR_c)-5,]
qPCR_c2 = qPCR_c [1: (nrow(qPCR_c)-5),]
View(qPCR_c2)
View(qPCR_c2)
#import and rename data set. Remember it needs to be in Git working directory!
qPCR_raw <- read.csv ("11_5_19_qPCR_raw_1.csv", header = TRUE)
class(qPCR_raw)
colnames(qPCR_raw)
names(qPCR_raw) <- c("Well", "Sample.Name", "Target.Name", "Task", "Reporter", "Quencher", "RQ", "RQ Min", "RQ Max", "Cт")
colnames(qPCR_raw)
#colnames(qPCR_raw) <- c(qPCR_raw[7,:]))
#qPCR_trim1 = qPCR_trim[6:(nrow(qPCR_trim),]
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
qPCR_c = qPCR_raw [7: nrow(qPCR_raw),]
qPCR_c2 = qPCR_c [1: (nrow(qPCR_c)-5),]
#import and rename data set. Remember it needs to be in Git working directory!
qPCR_raw <- read.csv ("11_5_19_qPCR_raw_1.csv", header = TRUE)
class(qPCR_raw)
colnames(qPCR_raw)
names(qPCR_raw) <- c("Well", "Sample.Name", "Target.Name", "Task", "Reporter", "Quencher", "RQ", "RQ Min", "RQ Max", "Cт")
colnames(qPCR_raw)
#colnames(qPCR_raw) <- c(qPCR_raw[7,:]))
#qPCR_trim1 = qPCR_trim[6:(nrow(qPCR_trim),]
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
qPCR_c = qPCR_raw [7: nrow(qPCR_raw),]
qPCR_c3 = qPCR_c [1: (nrow(qPCR_c)-5),]
View(qPCR_c3)
#import and rename data set. Remember it needs to be in Git working directory!
qPCR_raw <- read.csv ("11_5_19_qPCR_raw_1.csv", header = TRUE)
colnames(qPCR_raw)
names(qPCR_raw) <- c("Well", "Sample.Name", "Target.Name", "Task", "Reporter", "Quencher", "RQ", "RQ Min", "RQ Max", "Cт")
colnames(qPCR_raw)
#colnames(qPCR_raw) <- c(qPCR_raw[7,:]))
#qPCR_trim1 = qPCR_trim[6:(nrow(qPCR_trim),]
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
qPCR_c = qPCR_raw [7: nrow(qPCR_raw),]
qPCR_c1 = qPCR_c [1: (nrow(qPCR_c)-5),]
View(qPCR_c1)
qPCR_c1 = qPCR_c [1: (nrow(qPCR_c)-5),]
qPCR_cut <- select(qPCR_c1, 'Sample.Name', 'Target.Name', 'Cт')
#make a new table with just Sample Name, Target Name and CT
colnames(qPCR_cut)
qPCR_cut <- select(qPCR_c1, "Sample.Name", "Target.Name", "Cт")
qPCR_cut <- select [1:10]
qPCR_cut <- select(1:10)
qPCR_c2 [, 1:10]
View(qPCR_c2)
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт")
View(qPCR_c2)
#import and rename data set. Remember it needs to be in Git working directory!
qPCR_raw <- read.csv ("11_5_19_qPCR_raw_1.csv", header = TRUE)
colnames(qPCR_raw)
#rename column names
names(qPCR_raw) <- c("Well", "Sample.Name", "Target.Name", "Task", "Reporter", "Quencher", "RQ", "RQ Min", "RQ Max", "Cт")
colnames(qPCR_raw)
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
#cut out the first 6 rows and the last 5 rows that have no data
qPCR_c = qPCR_raw [7: nrow(qPCR_raw),]
qPCR_c1 = qPCR_c [1: (nrow(qPCR_c)-5),]
#make a new table with just Sample Name, Target Name and CT
colnames(qPCR_cut)
qPCR_c2 [, 1:10]
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт")
View(qPCR_cut)
qPCR_c1 = qPCR_c [1: (nrow(qPCR_c)-5),]
View(qPCR_c1)
#make a new table with just Sample Name, Target Name and CT
colnames(qPCR_cut)
#make a new table with just Sample Name, Target Name and CT
colnames(qPCR_c1)
#qPCR_c2 [, 1:10]
qPCR_cut <- select(qPCR_c1, "Sample.Name", "Target.Name", "Cт")
qPCR_c2 = qPCR_c1 [, 1:10]
View(qPCR_c2)
qPCR_c2 = qPCR_c1 [, 1:10]
qPCR_cut <- select(qPCR_c1, "Sample.Name", "Target.Name", "Cт")
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт")
View(qPCR_cut)
qPCR_target <- group_by(qPCR_cut, "Target.Name")
print(qPCR_target)
View(qPCR_target)
qPCR_target <- group_by(qPCR_cut, Target.Name)
print(qPCR_target)
View(qPCR_target)
print(qPCR_target)
View(qPCR_target)
qPCR_t <- group_by(qPCR_cut, Target.Name)
View(qPCR_t)
qPCR_t <- group_by(qPCR_cut, Sample.Name)
View(qPCR_t)
x = qPCR_cut %>% groupby(Sample.Name)
x = qPCR_cut %>% group_by(Sample.Name)
View(x)
x = qPCR_cut %>% group_by(Sample.Name,Target.Name)
View(x)
t(x)
view(x)
View(x)
x = t(x)
View(x)
x = group_by(Target.name) %>% t(x)
x = qPCR_cut %>% group_by(Sample.Name,Target.Name)
x = group_by(Target.Name) %>% t(x)
x = qPCR_cut %>% group_by(Sample.Name,Target.Name)
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
#cut out the first 6 rows and the last 5 rows that have no data
qPCR_c = qPCR_raw [7: nrow(qPCR_raw),]
View(x)
#import and rename data set. Remember it needs to be in Git working directory!
qPCR_raw <- read.csv ("11_5_19_qPCR_raw_1.csv", header = TRUE)
colnames(qPCR_raw)
#rename column names
names(qPCR_raw) <- c("Well", "Sample.Name", "Target.Name", "Task", "Reporter", "Quencher", "RQ", "RQ Min", "RQ Max", "Cт")
colnames(qPCR_raw)
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
#cut out the first 6 rows and the last 5 rows that have no data
qPCR_c = qPCR_raw [7: nrow(qPCR_raw),]
qPCR_c1 = qPCR_c [1: (nrow(qPCR_c)-5),]
#make a new table with just Sample Name, Target Name and CT
colnames(qPCR_c1)
qPCR_c2 = qPCR_c1 [, 1:10]
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт")
x = qPCR_cut %>% group_by(Sample.Name,Target.Name)
View(x)
#import and rename data set. Remember it needs to be in Git working directory!
qPCR_raw <- read.csv ("11_5_19_qPCR_raw_1.csv", header = TRUE)
colnames(qPCR_raw)
#rename column names
names(qPCR_raw) <- c("Well", "Sample.Name", "Target.Name", "Task", "Reporter", "Quencher", "RQ", "RQ Min", "RQ Max", "Cт")
colnames(qPCR_raw)
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
#cut out the first 6 rows and the last 5 rows that have no data
qPCR_c = qPCR_raw [7: nrow(qPCR_raw),]
head(qPCR_c)
#import and rename data set. Remember it needs to be in Git working directory!
qPCR_raw <- read.csv ("11_5_19_qPCR_raw_1.csv", header = TRUE)
colnames(qPCR_raw)
#rename column names
#names(qPCR_raw) <- c("Well", "Sample.Name", "Target.Name", "Task", "Reporter", "Quencher", "RQ", "RQ Min", "RQ Max", "Cт")
colnames(qPCR_raw)
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
#cut out the first 6 rows and the last 5 rows that have no data
qPCR_c = qPCR_raw [7: nrow(qPCR_raw),]
head(qPCR_c)
#import and rename data set. Remember it needs to be in Git working directory!
qPCR_raw <- read.csv ("11_5_19_qPCR_raw_1.csv", header = TRUE)
#rename column names
colnames(qPCR_raw) <- c("Well", "Sample.Name", "Target.Name", "Task", "Reporter", "Quencher", "RQ", "RQ Min", "RQ Max", "Cт")
colnames(qPCR_raw)
#qPCR_trim <- select(qPCR_raw, 'Sample.Name', 'Target.Name', 'Cт')
#cut out the first 6 rows and the last 5 rows that have no data
qPCR_c = qPCR_raw [7: nrow(qPCR_raw),]
head(qPCR_c)
qPCR_c1 = qPCR_c [1: (nrow(qPCR_c)-5),]
#make a new table with just Sample Name, Target Name and CT
colnames(qPCR_c1)
qPCR_c2 = qPCR_c1 [, 1:10]
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт")
x = qPCR_cut %>% group_by(Sample.Name,Target.Name)
View(x)
x = group_by(Target.Name) %>% t(x)
View(x)
y = group_by(x$Target.Name) %>% t(x)
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт")
qPCR_cut %>% group_by(Target.Name) %>% t(x) ->y
qPCR_cut %>% group_by(Target.Name) %>% t() ->y
View(y)
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт")
#x = qPCR_cut %>% group_by(Sample.Name,Target.Name)
qPCR_Gli = filter(Target.Name == "Gli1")
#x = qPCR_cut %>% group_by(Sample.Name,Target.Name)
qPCR_cut %>% filter(Target.Name == "Gli1") -> qPCR_Gli
qPCR_cut %>% filter(Target.Name == "GAPDH")-> qPCR_Gapdh
View(qPCR_Gapdh)
View(qPCR_Gapdh)
View(qPCR_Gli)
#x = qPCR_cut %>% group_by(Sample.Name,Target.Name)
qPCR_cut %>% filter(Target.Name == "Gli1") -> qPCR_Gli1
qPCR_Gli1 %>% avg(group_by(Sample.Name)) %>%  -> y
qPCR_Gli1 %>% avg(group_by(Sample.Name))  -> y
qPCR_Gli1 %>% average(group_by(Sample.Name))  -> y
install.packages('numpy')
install.packages('Numpy')
qPCR_Gli1 %>% mean(group_by(Sample.Name))  -> y
qPCR_Gli1 %>% mean(select(Sample.Name).group_by(Sample.Name))  -> y
qPCR_Gli1Avg <- aggregate(qPCR_Gli1[, 3], list(qPCR_Gli1$Sample.Name), mean)
View(qPCR_Gli1Avg)
qPCR_Gli1Avg <- aggregate(qPCR_Gli1[3], list(qPCR_Gli1$Sample.Name), mean)
sapply(qPCR_Gli1, class)
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт")
qPCR_cut[,3] <- sapply(qPCR_cut[, 2], as.numeric)
#x = qPCR_cut %>% group_by(Sample.Name,Target.Name)
qPCR_cut %>% filter(Target.Name == "Gli1") -> qPCR_Gli1
qPCR_cut %>% filter(Target.Name == "GAPDH")-> qPCR_Gapdh
qPCR_Gli1Avg <- aggregate(qPCR_Gli1[,3], list(qPCR_Gli1$Sample.Name), mean)
qPCR_Gli1Avg
qPCR_Gli1Avg
qPCR_cut[,3] <- sapply(qPCR_cut[, 2], as.numeric)
sapply(qPCR_cut,class)
#x = qPCR_cut %>% group_by(Sample.Name,Target.Name)
qPCR_cut %>% filter(Target.Name == "Gli1") -> qPCR_Gli1
qPCR_cut %>% filter(Target.Name == "GAPDH")-> qPCR_Gapdh
#qPCR_Gli1[,3] <- sapply(qPCR_Gli1[, 2], as.numeric)
qPCR_Gli1Avg <- aggregate(Target.Name + Sample.Name ~ Cт, list(qPCR_Gli1$Sample.Name), mean)
#qPCR_Gli1[,3] <- sapply(qPCR_Gli1[, 2], as.numeric)
qPCR_Gli1Avg <- aggregate(qPCR_Gli1$Target.Name + qPCR_Gli1$Sample.Name ~ qPCR_Gli1$Cт, list(qPCR_Gli1$Sample.Name), mean)
#qPCR_Gli1[,3] <- sapply(qPCR_Gli1[, 2], as.numeric)
qPCR_Gli1Avg <- aggregate(qPCR_Gli1$Sample.Name ~ qPCR_Gli1$Cт + qPCR_Gli1$Target.Name, list(qPCR_Gli1$Sample.Name), mean)
View(qPCR_Gli1Avg)
#qPCR_Gli1[,3] <- sapply(qPCR_Gli1[, 2], as.numeric)
qPCR_Gli1Avg <- aggregate(qPCR_Gli1$Sample.Name ~ qPCR_Gli1$Cт, list(qPCR_Gli1$Sample.Name), mean)
#qPCR_Gli1[,3] <- sapply(qPCR_Gli1[, 2], as.numeric)
qPCR_Gli1Avg <- aggregate(qPCR_Gli1[,3], list(qPCR_Gli1$Sample.Name), mean)
View(qPCR_Gli1Avg)
#qPCR_Gli1[,3] <- sapply(qPCR_Gli1[, 2], as.numeric)
qPCR_Gli1Avg <- aggregate(qPCR_Gli1[,3], list(qPCR_Gli1$Sample.Name), mean)
qPCR_Gli1 %>%
group_by(Sample.Name) %>%
slice(which.mean(Cт)) -> x
qPCR_Gli1 %>%
group_by(Sample.Name) %>%
slice(mean(Cт)) -> x
View(x)
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт")
qPCR_cut[,3] <- sapply(qPCR_cut[, 2], as.numeric)
#x = qPCR_cut %>% group_by(Sample.Name,Target.Name)
qPCR_cut %>% filter(Target.Name == "Gli1") -> qPCR_Gli1
qPCR_cut %>% filter(Target.Name == "GAPDH")-> qPCR_Gapdh
#qPCR_Gli1[,3] <- sapply(qPCR_Gli1[, 2], as.numeric)
qPCR_Gli1 %>%
group_by(Sample.Name) %>%
slice(mean(Cт)) -> x
qPCR_Gli1 %>%
group_by(Sample.Name) %>%
mean(Cт) -> x
print(mean(c(4,5,6)))
print(mean(c(4,5,6,7)))
#qPCR_Gli1[,3] <- sapply(qPCR_Gli1[, 2], as.numeric)
qPCR_Gli1 %>%
group_by(Sample.Name) %>%
summarise(Sample.Name,Target.Name,avgCт = mean(Cт)) -> x
#qPCR_Gli1[,3] <- sapply(qPCR_Gli1[, 2], as.numeric)
qPCR_Gli1 %>%
group_by(Sample.Name) %>%
summarise(Target.Name,avgCт = mean(Cт)) -> x
#qPCR_Gli1[,3] <- sapply(qPCR_Gli1[, 2], as.numeric)
qPCR_Gli1 %>%
group_by(Sample.Name) %>%
summarise(avgCт = mean(Cт)) -> x
View(x)
x = mean(qPCR_cut$Cт)
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт")
qPCR_cut[,3] <- sapply(qPCR_cut[, 2], as.numeric)
#x = qPCR_cut %>% group_by(Sample.Name,Target.Name)
qPCR_cut %>% filter(Target.Name == "Gli1") -> qPCR_Gli1
qPCR_cut %>% filter(Target.Name == "GAPDH")-> qPCR_Gapdh
x = mean(qPCR_cut$Cт)
qPCR_cut$Cт
#x = qPCR_cut %>% group_by(Sample.Name,Target.Name)
qPCR_cut %>% filter(Target.Name == "Gli1") -> qPCR_Gli1
View(qPCR_Gli1)
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт")
View(qPCR_cut)
qPCR_cut <- sapply(qPCR_cut[, 3], as.numeric)
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт")
View(qPCR_cut)
qPCR_cut1 <- sapply(qPCR_cut[, 3], as.numeric)
qPCR_cut1 <- lapply(qPCR_cut[, 3], as.numeric)
View(qPCR_cut1)
qPCR_cut1 <- apply(qPCR_cut[, 3], as.numeric)
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт")
qPCR_cut1 <- apply(qPCR_cut[, 3], as.numeric)
qPCR_cut1 <- sapply(qPCR_cut[Cт], as.numeric)
qPCR_cut1 <- sapply(qPCR_cut["Cт"], as.numeric)
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт")
qPCR_cut1 <- sapply(qPCR_cut[qPCR_cut$Cт], as.numeric)
qPCR_cut1 <- apply(qPCR_cut[qPCR_cut$Cт], as.numeric)
qPCR_cut = qPCR_cut [8: nrow(qPCR_cut),]
View(qPCR_cut)
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт")
#qPCR_cut = qPCR_cut [8: nrow(qPCR_cut),]
qPCR_cut1 <- sapply(qPCR_cut[qPCR_cut$Cт], as.numeric)
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт")
#qPCR_cut = qPCR_cut [8: nrow(qPCR_cut),]
qPCR_cut1 <- sapply(qPCR_cut[qPCR_cut$Cт], as.numeric)
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт") %>% sapply(qPCR_cut[], as.numeric)
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт") %>% sapply( as.numeric)
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт") %>% sapply([,3] as.numeric)
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт")
qPCR_cut$Cт <- as.numeric(qPCR_cut$Cт)
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт")
qPCR_cut$Cт <- as.numeric(qPCR_cut$Cт)
sapply(qPCR_cut,class)
qPCR_cut$Cт
qPCR_cut$Cт <- as.float(qPCR_cut$Cт)
qPCR_cut$Cт <- as.numeric(qPCR_cut$Cт)
qPCR_cut
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", "Cт")
qPCR_cut
qPCR_cut$Cт <- as.numeric(qPCR_cut$Cт[8:])
qPCR_cut$Cт <- as.numeric(as.character(qPCR_cut$Cт))
qPCR_cut$Cт
#x = qPCR_cut %>% group_by(Sample.Name,Target.Name)
qPCR_cut %>% filter(Target.Name == "Gli1") -> qPCR_Gli1
qPCR_cut %>% filter(Target.Name == "GAPDH")-> qPCR_Gapdh
qPCR_Gli1 %>%
group_by(Sample.Name) %>%
summarise(avgCт = mean(Cт)) -> x
View(x)
View(x)
qPCR_Gapdh %>%
group_by(Sample.Name) %>%
summarise(avgCт = mean(Cт)) -> y
qPCR_Gli1 %>%
group_by(Sample.Name,Target.Name) %>%
summarise(avgCт = mean(Cт)) -> x
qPCR_Gapdh %>%
group_by(Sample.Name) %>%
summarise(avgCт = mean(Cт)) -> y
#x = qPCR_cut %>% group_by(Sample.Name,Target.Name)
qPCR_cut %>% filter(Target.Name == "Gli1") -> qPCR_Gli1
qPCR_cut %>% filter(Target.Name == "GAPDH")-> qPCR_Gapdh
qPCR_Gli1 %>%
group_by(Sample.Name,Target.Name) %>%
summarise(avgCт = mean(Cт)) -> x
qPCR_Gapdh %>%
group_by(Sample.Name,Target.Name) %>%
summarise(avgCт = mean(Cт)) -> y
View(x)
View(y)
NEW = merge(x,y, by = "Sample.Name" )
View(NEW)
Merged = merge(x,y, by = "Sample.Name" )
i
qPCR_Gli1 %>%
group_by(Sample.Name,Target.Name) %>%
summarise(avgCт = mean(Cт)) -> Gli
qPCR_Gapdh %>%
group_by(Sample.Name,Target.Name) %>%
summarise(avgCт = mean(Cт)) -> GAPDH
Merged = merge(Gli,GAPDH, by = "Sample.Name" )
View(Merged)
qPCR_Gli1 %>%
group_by(Sample.Name,Target.Name) %>%
summarise(avgCт = mean(Cт)) -> Gli
qPCR_Gapdh %>%
group_by(Sample.Name,Target.Name) %>%
summarise(avgCт = mean(Cт)) -> GAPDH
na.rm = T))
qPCR_Gli1 %>%
group_by(Sample.Name,Target.Name) %>%
summarise(avgCт = mean(Cт)) -> Gli
qPCR_Gapdh %>%
group_by(Sample.Name,Target.Name) %>%
summarise(avgCт = mean(Cт)) -> GAPDH
View(GAPDH)
View(Gli)
Merged = merge(Gli,GAPDH, by = "Sample.Name" )
View(Merged)
Merged['DeltaCT'] = Merged$avgCт.x - Merged$avgCт.y
View(Merged)
Merged$Sample.Name <- as.character(Merged$Sample.Name)
sapply(Merged,class)
Merged %>% filter(!grepl('3T3', Sample.Name)) -> wt
Merged %>% filter(grepl('3T3', Sample.Name)) -> bcc
View(bcc)
View(wt)
View(bcc)
Merged %>% filter(!grepl('3T3', Sample.Name)) -> bcc
Merged %>% filter(grepl('3T3', Sample.Name)) -> wt
View(wt)
subtract_me = bcc[1,5]
subtract_me = bcc[1,6]
subtract_me = bcc[1,6]
Merged['DeltaDeltaCT'] = bcc$DeltaCT - subtract_me
View(Merged)
bcc['DeltaDeltaCT'] = bcc$DeltaCT - subtract_me
subtract_me = wt[1,6]
wt['DeltaDeltaCT'] = wt$DeltaCT - subtract_me
View(wt)
Stacked = rbind(wt,bcc)
View(Stacked)
Stacked['Fold Change'] = 2**(-1*Stacked$DeltaDeltaCT)
View(Stacked)
#Filter based on 3T3 and not 3T3
Merged %>% filter(grepl('3T3', Sample.Name)) -> wt
Merged %>% filter(grepl('BCC', Sample.Name)) -> bcc
#
subtract_me = bcc[1,6]
bcc['DeltaDeltaCT'] = bcc$DeltaCT - subtract_me
subtract_me = wt[1,6]
wt['DeltaDeltaCT'] = wt$DeltaCT - subtract_me
Stacked = rbind(wt,bcc)
Stacked['Fold Change'] = 2**(-1*Stacked$DeltaDeltaCT)
