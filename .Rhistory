#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name, y = qPCR_DCAA$avgRQ, fill = qPCR_DCAA$Target.Name.x))
print(Plot)
Plot <- Plot + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name, y = qPCR_DCAA$avgRQ2, fill = qPCR_DCAA$Target.Name.x))
print(Plot)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name, y = c(qPCR_DCAA$avgRQ, qPCR_DCAA$avgRQ2), fill = qPCR_DCAA$Target.Name.x))
print(Plot)
qPCR_DCAA$avgRQ2 <- qPCR_DCAA$avgRQ
print(qPCR_DCAA)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name, y = c(qPCR_DCAA$avgRQ, qPCR_DCAA$avgRQ2), fill = qPCR_DCAA$Target.Name.x))
print(Plot)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name, y = c(qPCR_DCAA$avgRQ), fill = qPCR_DCAA$Target.Name.x))
print(Plot)
#Name Merged plot
qPCR_DCAA <- C_Num_2
View(qPCR_DCAA_1)
#Name Merged plot
qPCR_DCAA <- C_Num_2
qPCR_DCAA_1 <- melt(qPCR_DCAA)
names(qPCR_DCAA_1)[3] <- "avgRQ"
qPCR_DCAA <- qPCR_DCAA_1
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name, y = c(qPCR_DCAA$avgRQ), fill = qPCR_DCAA$Target.Name.x))
print(Plot)
qPCR_DCAA_1 <- melt(qPCR_DCAA, id.vars = 'avgRQ')
print(qPCR_DCAA_1)
View(qPCR_DCAA_1)
#Name Merged plot
qPCR_DCAA <- C_Num_2
View(qPCR_DCAA)
x <- qPCR_DCAA$Sample.Name
y <- qPCR_DCAA$avgRQ
z <- qPCR_DCAA$avgRQ
df1 <- qPCR_DCAA(x,y,z)
df1 <- data.frame(x,y,z)
View(df1)
df2 <- melt(df1, id.vars = 'z')
View(df2)
ggplot(df2, aes(x=Sample.Name, y=avgRQ, fill=Target.Name)) +
geom_bar(stat='identity', position='dodge')
ggplot(df2, aes(x=z, y=value, fill=variable)) +
geom_bar(stat='identity', position='dodge')
x <- qPCR_DCAA$Sample.Name
y <- qPCR_DCAA$avgRQ
z <- qPCR_DCAA$avgRQ
df1 <- data.frame(x,y,z)
View(df1)
x <- qPCR_DCAA$Sample.Name
y <- qPCR_DCAA$avgRQ
z <- qPCR_DCAA$avgRQ
df1 <- data.frame(x,y,z)
df2 <- melt(df1, id.vars = 'z')
ggplot(df2, aes(x=qPCR_DCAA$Sample.Name, y= qPCR_DCAA$avgRQ, fill= z)) +
geom_bar(stat='identity', position='dodge')
x <- qPCR_DCAA$Sample.Name
y <- qPCR_DCAA$avgRQ
z <- qPCR_DCAA$avgRQ
df1 <- data.frame(x,y,z)
df2 <- melt(df1, id.vars = 'z')
lot <- ggplot(df2, aes(x=qPCR_DCAA$Sample.Name, y= qPCR_DCAA$avgRQ, fill= z)) +
geom_bar(stat='identity', position='dodge')
print(lot)
x <- qPCR_DCAA$Sample.Name
y <- qPCR_DCAA$avgRQ
z <- qPCR_DCAA$avgRQ
df1 <- data.frame(x,y,z)
df2 <- melt(df1, id.vars = 'z')
lot <- ggplot(df2, aes(x=qPCR_DCAA$Sample.Name, y= qPCR_DCAA$avgRQ, fill= qPCR_DCAA$Target.Name.x)) +
geom_bar(stat='identity', position='dodge')
print(lot)
#Put Averages and RQ Min and Max from original plot on one graph
C <- merge(Merged, qPCR_cut, by = "Sample.Name")
#Remove NAs (so that you have a cleaner table)
C_Num <- na.omit(C)
#Remove duplicates (because when you graph things get weird so you need it to be 1-15 where theres no repeat values)
C_Num_2 <- distinct(C_Num)
#Convert columns to numeric for RQ Min and RQ Max
sapply(C_Num_2, class)
C_Num_2$`RQ Min` <- as.numeric(as.character(C_Num_2$`RQ Min`))
sapply(C_Num_2, class)
C_Num_2$`RQ Max` <- as.numeric(as.character(C_Num_2$`RQ Max`))
sapply(C_Num_2, class)
#Name Merged plot
qPCR_DCAA <- C_Num_2
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name, y = c(qPCR_DCAA$avgRQ), fill = qPCR_DCAA$Target.Name.x))
print(Plot)
qPCR_DCAA_2 <- gather(qPCR_DCAA, sample,total, X:Y)
View(Plot)
library(tidyr)
#Name Merged plot
qPCR_DCAA <- C_Num_2
qPCR_DCAA_2 <- gather(qPCR_DCAA, sample,total, X:Y)
qPCR_DCAA_2 <- gather(qPCR_DCAA,sample,total, qPCR_DCAA$Sample.Name:qPCR_DCAA$Target.Name.x)
#Name Merged plot
qPCR_DCAA <- C_Num_2
qPCR_DCAA_2 <- gather(qPCR_DCAA,sample,total, qPCR_DCAA$Sample.Name:qPCR_DCAA$Target.Name.x)
#Name Merged plot
qPCR_DCAA <- C_Num_2
qPCR_DCAA_2 <- gather(qPCR_DCAA,sample,total, qPCR_DCAA$Sample.Name:qPCR_DCAA$Target.Name.x)
print(qPCR_DCAA_2)
#Name Merged plot
qPCR_DCAA <- C_Num_2
qPCR_DCAA_2 <- gather(qPCR_DCAA,sample,total, qPCR_DCAA$Sample.Name:qPCR_DCAA$Target.Name.x)
qPCR_DCAA_2 <- gather(qPCR_DCAA, sample, total, qPCR_DCAA$Sample.Name:qPCR_DCAA$Target.Name.x)
print(qPCR_DCAA_2)
#Name Merged plot
qPCR_DCAA <- C_Num_2
View(qPCR_DCAA)
#clear current environment
rm(list = ls(all.names = TRUE))
#load packages that have been installed (always run these commands)
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(readxl)
library(reshape2)
library(tidyr)
#Import Excel data using import dataset on the right side of the screen, copy the way to read it from the console and then rename the file to something simpler
X3T3_Blimp1_WT_c_myc <- read_excel("~/Desktop/3T3 Blimp1 WT +c-myc.xls")
View(X3T3_Blimp1_WT_c_myc)
qPCR_raw <- X3T3_Blimp1_WT_c_myc
#Check that the file is correct
print(qPCR_raw)
#Look at current column names
colnames(qPCR_raw)
#rename column names
colnames(qPCR_raw) <- c("Well", "Sample.Name", "Target.Name", "Task", "Reporter", "Quencher", "RQ", "RQ Min", "RQ Max", "CÑ‚")
colnames(qPCR_raw)
#cut out the first 6 rows and the last 5 rows that have no data (random things given by the instrument output file)
qPCR_c = qPCR_raw [7: nrow(qPCR_raw),]
head(qPCR_c)
qPCR_c1 = qPCR_c [1: (nrow(qPCR_c)-5),]
#make a new table with Sample Name, RQ, RQ Min and RQ Max
colnames(qPCR_c1)
qPCR_c2 = qPCR_c1 [, 1:10]
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", 'RQ', "RQ Min", "RQ Max")
print(qPCR_cut)
#look at the class of each of the variables
sapply(qPCR_cut, class)
#Convert RQ to a numeric and Sample Name to a factor so that it can be later sorted if necessary
qPCR_cut$RQ <- as.numeric(as.character(qPCR_cut$RQ))
qPCR_cut$Sample.Name <- as.factor(qPCR_cut$Sample.Name)
#look to see that the variable types were changed
sapply(qPCR_cut, class)
#filter the file based on Target Gene
qPCR_cut %>% filter(grepl('mAp', Target.Name)) -> qPCR_map
qPCR_cut %>% filter(grepl('GAPDH', Target.Name)) -> qPCR_GAPDH
qPCR_cut %>% filter(grepl('Blimp1', Target.Name)) -> qPCR_Blimp
qPCR_cut %>% filter(grepl('c-myc', Target.Name)) -> qPCR_c_myc
View(qPCR_Blimp)
View(qPCR_c)
View(qPCR_c_myc)
View(qPCR_GAPDH)
View(qPCR_map)
#Group by the Sample Name and Target Gene and then take avg of RQ for each group (accounting for the drop of anything with NA--Reference Gene RQs)
qPCR_map %>%
group_by(Sample.Name, Target.Name) %>%
summarise(avgRQ = mean(RQ, na.rm = TRUE)) -> Averagemap
View(Averagemap)
qPCR_Blimp %>%
group_by(Sample.Name, Target.Name) %>%
summarise(avgRQ = mean(RQ, na.rm = TRUE)) -> AverageBlimp
View(AverageBlimp)
qPCR_c_myc %>%
group_by(Sample.Name, Target.Name) %>%
summarise(avgRQ = mean(RQ, na.rm = TRUE)) -> Averagec_myc
View(Averagec_myc)
#Merge back together
Merged = rbind(Averagemap,AverageBlimp, Averagec_myc)
View(Merged)
#Put Averages and RQ Min and Max from original plot on one graph
C <- merge(Merged, qPCR_cut, by = "Sample.Name")
View(C)
#Remove NAs (so that you have a cleaner table)
C_Num <- na.omit(C)
View(C_Num)
View(C)
#Put Averages and RQ Min and Max from original plot on one graph
C <- merge(Merged, qPCR_cut, by = "Sample.Name")
#Remove NAs (so that you have a cleaner table)
C_Num <- na.omit(C)
View(C_Num)
#Remove duplicates (because when you graph things get weird so you need it to be 1-15 where theres no repeat values)
C_Num_2 <- distinct(C_Num)
View(C_Num_2)
#Convert columns to numeric for RQ Min and RQ Max
sapply(C_Num_2, class)
C_Num_2$`RQ Min` <- as.numeric(as.character(C_Num_2$`RQ Min`))
sapply(C_Num_2, class)
C_Num_2$`RQ Max` <- as.numeric(as.character(C_Num_2$`RQ Max`))
sapply(C_Num_2, class)
#Name Merged plot
qPCR_DCAA <- C_Num_2
View(qPCR_DCAA)
qPCR_DCAA <- gather("qPCR_DCAA$Sample.Name","qPCR_DCAA$Target.Name.x", -Sample.Name )
sapply(C_Num_2, class)
C_Num_2$Target.Name.x <- as.numeric(as.character(C_Num_2$Target.Name.x))
sapply(C_Num_2, class)
#Name Merged plot
qPCR_DCAA <- C_Num_2
qPCR_DCAA <- gather("qPCR_DCAA$Sample.Name","qPCR_DCAA$Target.Name.x", -Sample.Name )
qPCR_DCAA <- gather("qPCR_DCAA$Sample.Name","qPCR_DCAA$Target.Name.x", -qPCR_DCAA$Sample.Name )
qPCR_DCAA <- gather(qPCR_DCAA$Sample.Name,qPCR_DCAA$Target.Name.x, -qPCR_DCAA$Sample.Name )
#Name Merged plot
qPCR_DCAA <- C_Num_2
qPCR_DCAA <- gather(qPCR_DCAA$Sample.Name,qPCR_DCAA$Target.Name.x, -qPCR_DCAA$Sample.Name )
C_Num_2$Sample.Name <- as.numeric(as.factor(C_Num_2$Sample.Name))
sapply(C_Num_2, class)
#Name Merged plot
qPCR_DCAA <- C_Num_2
qPCR_DCAA <- gather(qPCR_DCAA$Sample.Name,qPCR_DCAA$Target.Name.x, -qPCR_DCAA$Sample.Name )
C_Num_2$Sample.Name <- as.numeric(as.character(C_Num_2$Sample.Name))
sapply(C_Num_2, class)
#Name Merged plot
qPCR_DCAA <- C_Num_2
qPCR_DCAA <- gather(qPCR_DCAA$Sample.Name,qPCR_DCAA$Target.Name.x, -qPCR_DCAA$Sample.Name )
C_Num_2$`RQ Max` <- as.numeric(as.character(C_Num_2$`RQ Max`))
sapply(C_Num_2, class)
C_Num_2$Target.Name.x <- as.numeric(as.character(C_Num_2$Target.Name.x))
sapply(C_Num_2, class)
C_Num_2$Sample.Name <- as.numeric(as.character(C_Num_2$Sample.Name))
sapply(C_Num_2, class)
#Name Merged plot
qPCR_DCAA <- C_Num_2
qPCR_DCAA <- gather(qPCR_DCAA$Sample.Name,qPCR_DCAA$Target.Name.x, -qPCR_DCAA$Sample.Name )
C_Num_2$`RQ Max` <- as.numeric(as.character(C_Num_2$`RQ Max`))
sapply(C_Num_2, class)
C_Num_2$Target.Name.x <- as.numeric(as.character(C_Num_2$Target.Name.x))
sapply(C_Num_2, class)
C_Num_2$Sample.Name <- as.numeric(as.character(C_Num_2$Sample.Name))
sapply(C_Num_2, class)
#Name Merged plot
qPCR_DCAA <- C_Num_2
qPCR_DCAA <- gather(qPCR_DCAA$Sample.Name,qPCR_DCAA$Target.Name.x, -qPCR_DCAA$Sample.Name )
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name, y = c(qPCR_DCAA$avgRQ), fill = qPCR_DCAA$Target.Name.x))
sapply(C_Num_2, class)
#Name Merged plot
qPCR_DCAA <- C_Num_2
#Convert columns to numeric for RQ Min and RQ Max
sapply(C_Num_2, class)
C_Num_2$`RQ Min` <- as.numeric(as.character(C_Num_2$`RQ Min`))
sapply(C_Num_2, class)
C_Num_2$`RQ Max` <- as.numeric(as.character(C_Num_2$`RQ Max`))
sapply(C_Num_2, class)
#Name Merged plot
qPCR_DCAA <- C_Num_2
qPCR_DCAA <- gather(qPCR_DCAA$Sample.Name,qPCR_DCAA$Target.Name.x, -qPCR_DCAA$Sample.Name )
#Name Merged plot
qPCR_DCAA <- C_Num_2
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name, y = c(qPCR_DCAA$avgRQ), fill = qPCR_DCAA$Target.Name.x))+ geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Target.Name.x, y = c(qPCR_DCAA$avgRQ), fill = qPCR_DCAA$Target.Name.x))
print(Plot)
colnames(qPCR_DCAA)
qPCR_DCAA %>%
gather("Target.Name.x", "avgRQ",-Sample.Name) %>%
ggplot(aes(Sample.Name, avgRQ, fill = Target.Name.x)) +
geom_bar(position = "dodge", stat = "identity") +
theme_bw()
qPCR_DCAA %>%
gather("Sample.Name", "avgRQ",-Target.Name) %>%
ggplot(aes(Sample.Name, avgRQ, fill = Target.Name.x)) +
geom_bar(position = "dodge", stat = "identity") +
theme_bw()
#Name Merged plot
qPCR_DCAA <- C_Num_2
colnames(qPCR_DCAA)
qPCR_DCAA %>%
gather("Sample.Name", "avgRQ",-Target.Name) %>%
ggplot(aes(Sample.Name, avgRQ, fill = Target.Name.x)) +
geom_bar(position = "dodge", stat = "identity") +
theme_bw()
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name, y = c(qPCR_DCAA$avgRQ), fill = qPCR_DCAA$Target.Name.x))+ geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Target.Name.x, y = c(qPCR_DCAA$avgRQ), fill = qPCR_DCAA$Target.Name.x))
qPCR_DCAA %>%
gather("Sample.Name", "avgRQ",-Target.Name.x) %>%
ggplot(aes(Sample.Name, avgRQ, fill = Target.Name.x)) +
geom_bar(position = "dodge", stat = "identity") +
theme_bw()
#Remove NAs (so that you have a cleaner table)
C_Num <- na.omit(C)
#Remove duplicates (because when you graph things get weird so you need it to be 1-15 where theres no repeat values)
C_Num_2 <- distinct(C_Num)
#Convert columns to numeric for RQ Min and RQ Max
sapply(C_Num_2, class)
C_Num_2$`RQ Min` <- as.numeric(as.character(C_Num_2$`RQ Min`))
sapply(C_Num_2, class)
C_Num_2$`RQ Max` <- as.numeric(as.character(C_Num_2$`RQ Max`))
sapply(C_Num_2, class)
#Name Merged plot
qPCR_DCAA <- C_Num_2
colnames(qPCR_DCAA)
qPCR_DCAA %>%
gather("Sample.Name", "avgRQ",-Target.Name.x) %>%
ggplot(aes(Sample.Name, avgRQ, fill = Target.Name.x)) +
geom_bar(position = "dodge", stat = "identity") +
theme_bw()
#load packages that have been installed (always run these commands)
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(readxl)
library(reshape2)
library(tidyr)
#Import Excel data using import dataset on the right side of the screen, copy the way to read it from the console and then rename the file to something simpler
X3T3_Blimp1_WT_c_myc <- read_excel("~/Desktop/3T3 Blimp1 WT +c-myc.xls")
View(X3T3_Blimp1_WT_c_myc)
qPCR_raw <- X3T3_Blimp1_WT_c_myc
#Check that the file is correct
print(qPCR_raw)
#Look at current column names
colnames(qPCR_raw)
#rename column names
colnames(qPCR_raw) <- c("Well", "Sample.Name", "Target.Name", "Task", "Reporter", "Quencher", "RQ", "RQ Min", "RQ Max", "CÑ‚")
colnames(qPCR_raw)
#cut out the first 6 rows and the last 5 rows that have no data (random things given by the instrument output file)
qPCR_c = qPCR_raw [7: nrow(qPCR_raw),]
head(qPCR_c)
qPCR_c1 = qPCR_c [1: (nrow(qPCR_c)-5),]
#make a new table with Sample Name, RQ, RQ Min and RQ Max
colnames(qPCR_c1)
qPCR_c2 = qPCR_c1 [, 1:10]
qPCR_cut <- select(qPCR_c2, "Sample.Name", "Target.Name", 'RQ', "RQ Min", "RQ Max")
print(qPCR_cut)
#look at the class of each of the variables
sapply(qPCR_cut, class)
#Convert RQ to a numeric and Sample Name to a factor so that it can be later sorted if necessary
qPCR_cut$RQ <- as.numeric(as.character(qPCR_cut$RQ))
qPCR_cut$Sample.Name <- as.factor(qPCR_cut$Sample.Name)
#look to see that the variable types were changed
sapply(qPCR_cut, class)
#filter the file based on Target Gene
qPCR_cut %>% filter(grepl('mAp', Target.Name)) -> qPCR_map
qPCR_cut %>% filter(grepl('GAPDH', Target.Name)) -> qPCR_GAPDH
qPCR_cut %>% filter(grepl('Blimp1', Target.Name)) -> qPCR_Blimp
qPCR_cut %>% filter(grepl('c-myc', Target.Name)) -> qPCR_c_myc
#Group by the Sample Name and Target Gene and then take avg of RQ for each group (accounting for the drop of anything with NA--Reference Gene RQs)
qPCR_map %>%
group_by(Sample.Name, Target.Name) %>%
summarise(avgRQ = mean(RQ, na.rm = TRUE)) -> Averagemap
qPCR_Blimp %>%
group_by(Sample.Name, Target.Name) %>%
summarise(avgRQ = mean(RQ, na.rm = TRUE)) -> AverageBlimp
qPCR_c_myc %>%
group_by(Sample.Name, Target.Name) %>%
summarise(avgRQ = mean(RQ, na.rm = TRUE)) -> Averagec_myc
#Merge back together
Merged = rbind(Averagemap,AverageBlimp, Averagec_myc)
#Put Averages and RQ Min and Max from original plot on one graph
C <- merge(Merged, qPCR_cut, by = "Sample.Name")
#Remove NAs (so that you have a cleaner table)
C_Num <- na.omit(C)
#Remove duplicates (because when you graph things get weird so you need it to be 1-15 where theres no repeat values)
C_Num_2 <- distinct(C_Num)
#Convert columns to numeric for RQ Min and RQ Max
sapply(C_Num_2, class)
C_Num_2$`RQ Min` <- as.numeric(as.character(C_Num_2$`RQ Min`))
sapply(C_Num_2, class)
C_Num_2$`RQ Max` <- as.numeric(as.character(C_Num_2$`RQ Max`))
sapply(C_Num_2, class)
#Name Merged plot
qPCR_DCAA <- C_Num_2
colnames(qPCR_DCAA)
qPCR_DCAA %>%
gather("Sample.Name", "avgRQ",-Target.Name.x) %>%
ggplot(aes(Sample.Name, avgRQ, fill = Target.Name.x)) +
geom_bar(position = "dodge", stat = "identity") +
theme_bw()
#Name Merged plot
qPCR_DCAA <- C_Num_2
colnames(qPCR_DCAA)
qPCR_DCAA %>%
gather(qPCR_DCAA$Sample.Name, qPCR_DCAA$avgRQ,-Target.Name.x) %>%
ggplot(aes(Sample.Name, avgRQ, fill = Target.Name.x)) +
geom_bar(position = "dodge", stat = "identity") +
theme_bw()
#Name Merged plot
qPCR_DCAA <- C_Num_2
colnames(qPCR_DCAA)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name, y = c(qPCR_DCAA$avgRQ), fill = qPCR_DCAA$Target.Name.x))+ geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Target.Name.x, y = c(qPCR_DCAA$avgRQ), fill = qPCR_DCAA$Target.Name.x))
print(Plot)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name, y = c(qPCR_DCAA$avgRQ), fill = qPCR_DCAA$Target.Name.x))+ geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Target.Name.x, y = c(qPCR_DCAA$avgRQ)
#Name Merged plot
qPCR_DCAA <- C_Num_2
colnames(qPCR_DCAA)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name, y = c(qPCR_DCAA$avgRQ), fill = qPCR_DCAA$Target.Name.x))+ geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Target.Name.x, y = c(qPCR_DCAA$avgRQ)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name, y = c(qPCR_DCAA$avgRQ), fill = qPCR_DCAA$Target.Name.x))+ geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Target.Name.x, y = c(qPCR_DCAA$avgRQ))
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name, y = c(qPCR_DCAA$avgRQ), fill = qPCR_DCAA$Target.Name.x))+ geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Target.Name.x, y = c(qPCR_DCAA$avgRQ)))
print(Plot)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name, y = c(qPCR_DCAA$avgRQ))+ geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Target.Name.x, y = c(qPCR_DCAA$avgRQ)))
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name, y = c(qPCR_DCAA$avgRQ))) + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Target.Name.x, y = c(qPCR_DCAA$avgRQ)))
print(Plot)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name, y = c(qPCR_DCAA$avgRQ))) + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Target.Name.x, y = c(qPCR_DCAA$avgRQ)))
print(Plot)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name, y = c(qPCR_DCAA$avgRQ)))
print(Plot)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name, y = c(qPCR_DCAA$avgRQ)))
print(Plot)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = c(qPCR_DCAA$Sample.Name, qPCR_DCAA$Target.Name.x), y = c(qPCR_DCAA$avgRQ)))
print(Plot)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name), y = c(qPCR_DCAA$avgRQ)) + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Target.Name.x, y = c(qPCR_DCAA$avgRQ))
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name), y = c(qPCR_DCAA$avgRQ)) + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Target.Name.x, y = c(qPCR_DCAA$avgRQ)))
print(Plot)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name), y = c(qPCR_DCAA$avgRQ)) + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Target.Name.x, y = c(qPCR_DCAA$avgRQ))
#Name Merged plot
qPCR_DCAA <- C_Num_2
colnames(qPCR_DCAA)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name), y = c(qPCR_DCAA$avgRQ)) + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Target.Name.x, y = c(qPCR_DCAA$avgRQ))
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name), y = c(qPCR_DCAA$avgRQ)) + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Target.Name.x, y = c(qPCR_DCAA$avgRQ)))
print(Plot)
#Convert columns to numeric for RQ Min and RQ Max
sapply(C_Num_2, class)
C_Num_2$`RQ Min` <- as.numeric(as.character(C_Num_2$`RQ Min`))
sapply(C_Num_2, class)
C_Num_2$`RQ Max` <- as.numeric(as.character(C_Num_2$`RQ Max`))
sapply(C_Num_2, class)
#Name Merged plot
qPCR_DCAA <- C_Num_2
colnames(qPCR_DCAA)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name), y = c(qPCR_DCAA$avgRQ)) + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Target.Name.x, y = c(qPCR_DCAA$avgRQ)))
print(Plot)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name), y = c(qPCR_DCAA$avgRQ)) + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Target.Name.x, y = c(qPCR_DCAA$avgRQ))
#Name Merged plot
qPCR_DCAA <- C_Num_2
colnames(qPCR_DCAA)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name), y = c(qPCR_DCAA$avgRQ)) + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Target.Name.x, y = c(qPCR_DCAA$avgRQ))
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name), y = c(qPCR_DCAA$avgRQ))
print(Plot)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name), y = c(qPCR_DCAA$avgRQ))
print(Plot)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name), y = qPCR_DCAA$avgRQ))
print(Plot)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA_2$Sample.Name, y = qPCR_DCAA_2$avgRQ, fill = qPCR_DCAA_2$Sample.Name))
print(Plot)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Sample.Name, y = qPCR_DCAA$avgRQ, fill = qPCR_DCAA$Sample.Name))
print(Plot)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Target.Name.x, y = qPCR_DCAA$avgRQ, fill = qPCR_DCAA$Sample.Name))
print(Plot)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Target.Name.x, y = qPCR_DCAA$avgRQ, fill = qPCR_DCAA$Sample.Name)) + geom_bar(stat = "identity", width=.5, position = "dodge")))
print(Plot)
#Follow the Below to Make a Basic Plot with Sample name versus RQ where the fill is based on Sample Name
#Generate Basic Plot
Plot <- ggplot() + geom_col(data = qPCR_DCAA, aes(x = qPCR_DCAA$Target.Name.x, y = qPCR_DCAA$avgRQ, fill = qPCR_DCAA$Sample.Name)) + geom_bar(stat = "identity", width=.5, position = "dodge")
print(Plot)
